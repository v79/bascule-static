buildscript {
	ext.kotlin_version = '1.2.60'
	ext.handlebars_version = '4.1.0'
	ext.slf4j_version = '1.6.2'
	ext.flexmark_version = '0.34.22'
	ext.spek_version = '1.1.5'
	ext.mockk_version = '1.8.7'
	ext.picocli_version = '3.5.2'
	ext.jansi_version = '1.17.1'
	ext.snakeyaml_version = '1.23'
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.61'
}

group 'org.liamjd'
version '0.0.3'

repositories {
    mavenCentral()
	jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

	// handlebars templating
	compile group: 'com.github.jknack', name: 'handlebars', version: "$handlebars_version"

	// markdown - probably want to be more selective with this!
	compile group: 'com.vladsch.flexmark', name:'flexmark-all', version: "$flexmark_version"

	// snakeyaml
	compile group: 'org.yaml', name: 'snakeyaml', version: "$snakeyaml_version"

	// sl4j logging
	compile group: 'org.slf4j', name: 'slf4j-simple', version: "$slf4j_version"

	// command line parsing
	compile group: 'info.picocli', name: 'picocli', version: "$picocli_version"
	compile group: 'org.fusesource.jansi', name: 'jansi', version: "$jansi_version"

	// Koin for Kotlin apps
	compile 'org.koin:koin-core:1.0.0-RC-3'
	// Testing
	testCompile 'org.koin:koin-test:1.0.0-RC-3'

	// testing
	testCompile group: "org.jetbrains.kotlin", name: "kotlin-test", version: "$kotlin_version"
	testCompile(group: "org.jetbrains.spek", name: "spek-api", version: "$spek_version") {
		// exclude kotlin from spek, so that we can use the newest version
		exclude group: 'org.jetbrains.kotlin'
	}
	testCompile group: "io.mockk", name: "mockk", version: "${mockk_version}"
	testRuntime("org.jetbrains.spek:spek-junit-platform-engine:${spek_version}") {
		// exclude junit and kotlin from the engine, so we can use our own versions
		exclude group: 'org.junit.platform'
		exclude group: 'org.jetbrains.kotlin'
	}

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


sourceSets {
	main.resources.srcDirs += ['src/main/resources']
}

jar{
	// required for building JAR files
	baseName = 'bascule'
//	version = ext.version
	manifest {
		attributes(
				'Main-Class': 'org.liamjd.bascule.MainKt'
		)
	}

	from('/src/main/resources') {
		include '*'
	}

	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

